export const TESTNET_URL = 'https://bs-stage.api.onnftverse.com/v1';

export type NFTMiningStatus = 'listed' | 'unlisted' | 'all';

export type NFTFileType = 'text' | 'threeD' | 'image' | 'video';
export type NFTStandard = 'arc69';

export type BlockchainName = 'ALGORAND' | 'FLOW';

export type NFTBody = {
    standard:NFTStandard;// default value of standard is arc69
    name: string; // Name of the NFT
    description?: string; // Description of the NFT
    price:number;//Price of the NFT
    priceUnit:string;//Price Unit of the NFT
    type: NFTFileType; // Type of the NFT
    collection: string; // Collection name of the NFT
    cid:string;//cid
    image:string;//path to that image file
    mediaUrl:string;//this is animation_url on opensea
    mimeType:string;// Type to be minted as
    externalUrl:string;// Cloudfront URL, or S3 URL or Pinata URL or any other url
    assetS3Url:string;// Cloudfront URL, or S3 URL or Pinata URL or any other url
    mainExternalAssetId: string; // Asset ID that you want to mint as NFT. This is the externalAssetId you passed while uploading the asset.
    supportingExternalAssetIds?: string[]; // List of additional supporting external asset IDs that you want to mint in this NFT.
    mainAssetId: number; // Asset ID that you want to mint as NFT. This is NFTVerse's internal asset ID.
    supportingAssetIds?: number[]; // List of additional supporting asset IDs that you want to mint in this NFT.
    properties?: { key: string; value: string }[]; // List of key-value pairs that you want to add to the NFT
    recipient: NFTRecipient; // Recipient of the NFT
};

export type NFTTransfer={
    nftId:number;//NFT Id to transfer
    blockchainNftId:string;// blockchain NFT Id 
    nftOwnerAddress:string;// Address of the owner of the nft
    gasFee:number;// Fee charged for transfering NFT
    recipient:NFTRecipient// properties of the recipient
}

export type NFTRecipient = {
    nftVerseUserId: number; // NFTVerse user ID of the recipient
    externalUserId: number;// External User Id 
    address: string; // Address of the recipient
    blockchain: BlockchainName; // Blockchain of the recipient
};

export type NFTForSale = {
    nftId: number; // NFT ID
    price: number; // Price of the NFT
    priceUnit: 'algo' | 'flow' | 'usd' | 'inr' | 'eth'; // Price unit of the NFT
    blockchainNftId:number;//blockchain of the nft
};

export type WalletUser = {
    externalUserId: string; // External user ID
    nftVerseUserId:number;// nftverse user's Id
    blockchain:BlockchainName;//Blockchain
    email: string; // Email of the user
    mobile: string; // Mobile number of the user
};

export type CustodianWalletUser = {
    email: string; // Email of the user
    address: string; // Address of the user
    seedPhrase: string; // A cluster of random words generated by your crypto wallet when setting it up
    blockchain:BlockchainName//blockchain
};

export type FungibleToken = {
    ftId: number; // Fungible token ID
    blockchainFtId: number; // Blockchain Fungible token ID
    buyerUserId: number; // User ID of the buyer
    blockchain: BlockchainName; // Blockchain of the Fungible token
    amount: number; // Amount of the Fungible token
    externalUserId: string; // External user ID
};
